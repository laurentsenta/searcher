1
00:00:00,000 --> 00:00:10,780
As you know, and as we're going to see right after this, there's a whole small Cambrian


2
00:00:10,780 --> 00:00:17,040
explosion of IPFS implementations happening. And that comes with the risk that we could


3
00:00:17,040 --> 00:00:23,920
lose cohesion in terms of what IPFS is and how the entire ecosystem fits together. And


4
00:00:23,920 --> 00:00:30,160
so in order to prevent that from happening, we've been working on a set of core principles


5
00:00:30,160 --> 00:00:35,040
that all of IPFS can share. Because if we have a shared foundation, a shared set of


6
00:00:35,040 --> 00:00:41,440
principles, then everyone can go and play and invent crazy things, and the entire system


7
00:00:41,440 --> 00:00:46,920
retains its cohesion and can work together. A part of that, one thing that's important


8
00:00:46,920 --> 00:00:52,720
to understand is that we tend to think of principles as the first thing you do. You


9
00:00:52,720 --> 00:00:56,240
want to build something, and first you do the principles, and then you lay the foundations,


10
00:00:56,240 --> 00:01:03,080
and then you start building. But in practice, what actually happens is that we build things,


11
00:01:03,080 --> 00:01:07,520
and then we figure out why we got it right, or what we got wrong, and what's wrong about


12
00:01:07,520 --> 00:01:12,480
it, and how we have to change it. And that's why the idea here is that this principle document


13
00:01:12,480 --> 00:01:18,680
is meant to be a living document. On the internet, on the web, these things have been built and


14
00:01:18,680 --> 00:01:23,440
rebuilt for decades, and we're still finding new principles and documenting new principles.


15
00:01:23,440 --> 00:01:26,160
And the idea is that we really should be doing the same here.


16
00:01:26,160 --> 00:01:32,320
And so the first batch landed, and it's actually pretty straightforward. If you have basically


17
00:01:32,320 --> 00:01:40,960
two primary characteristics, you can have something that's IPFS-like. First, you need


18
00:01:40,960 --> 00:01:48,440
content that is content-addressed with verifiability at the endpoints. And second, which is tied


19
00:01:48,440 --> 00:01:53,720
to the first, if you have that, then you can use arbitrary transports. And so that's basically


20
00:01:53,720 --> 00:02:00,800
everything you need to guarantee that something can be IPFS-like in principle. And in a sense,


21
00:02:00,800 --> 00:02:09,680
you could have a song saying, all you need is SIDS.


22
00:02:09,680 --> 00:02:17,200
Based on those two very basic characteristics, we can already see outcomes that are positive


23
00:02:17,200 --> 00:02:26,320
in terms of the results. So first, just from that, you get self-certified addressability.


24
00:02:26,320 --> 00:02:31,000
If you think of the way that addressing works on the web, we tend to always say, oh, but


25
00:02:31,000 --> 00:02:35,960
there's a problem because we delegate to DNS. But it's not just delegation to DNS. Authority


26
00:02:35,960 --> 00:02:41,160
is also delegated to the server itself. And that's actually how it was designed. The idea


27
00:02:41,160 --> 00:02:46,320
is that you go to DNS, DNS tells you where the server is, and then as a user, you are


28
00:02:46,320 --> 00:02:51,520
effectively on someone's property. And anything you get is something that they have validated


29
00:02:51,520 --> 00:02:55,000
for you, that they promise is what they're supposed to be giving you, and that's all


30
00:02:55,000 --> 00:03:00,480
you can find out about it. The idea is that this creates an asymmetry of power between


31
00:03:00,480 --> 00:03:04,680
you as a user and the person running the server. Basically, everything becomes a benevolent


32
00:03:04,680 --> 00:03:08,400
dictatorship, or at least the best you can get is a benevolent dictatorship. It's always


33
00:03:08,400 --> 00:03:14,200
a dictatorship anyway. With self-certified addressability, you don't need to rely on


34
00:03:14,200 --> 00:03:20,680
anyone else's authority. You can just get it and verify it yourself. And this makes


35
00:03:20,680 --> 00:03:29,360
CIDs the trust model of IPFS. And the second outcome of these very two basic principles


36
00:03:29,360 --> 00:03:35,080
is that you get better robustness from it. We've all heard this principle that you're


37
00:03:35,080 --> 00:03:38,960
supposed to be liberal in what you accept and conservative in what you send when you're


38
00:03:38,960 --> 00:03:43,120
writing network protocols. And it sounds nice. It sounds like the kind of person you want


39
00:03:43,120 --> 00:03:48,520
to be. You're open to anything that other people might do, but you're careful about


40
00:03:48,520 --> 00:03:54,720
what you do yourself. But in practice, it turns out when you run that over decades and


41
00:03:54,720 --> 00:04:01,080
decades, it actually creates a big mess. It was a huge effort to clean up HTTP after doing


42
00:04:01,080 --> 00:04:06,920
that kind of stuff for a while. It was a massive effort just to get the HTML parsing algorithm


43
00:04:06,920 --> 00:04:13,440
right after a couple decades of doing it this way. And so basically, if you look at those


44
00:04:13,440 --> 00:04:19,480
core principles, those two characteristics, we get something that is a new robustness


45
00:04:19,480 --> 00:04:24,200
principle that is specific to IPFS. And that's actually better. It's being strict about the


46
00:04:24,200 --> 00:04:29,000
outcomes. You want to be strict at the endpoints. And this allows you to be completely tolerant


47
00:04:29,000 --> 00:04:33,000
about anything in the middle. You could have a carrier pigeon. So long as you have a CID,


48
00:04:33,000 --> 00:04:36,720
it doesn't matter. You can just put the content in it. It doesn't matter where it transfers


49
00:04:36,720 --> 00:04:41,240
or what goes through, what happens to it in the middle. You can still check that it's


50
00:04:41,240 --> 00:04:46,840
there. And this creates a level of robustness that enables experimentation and any kind


51
00:04:46,840 --> 00:04:54,520
of wild implementation design that anyone might come up with so that IPFS can work in


52
00:04:54,520 --> 00:05:01,240
all kinds of situations, any kind of device, any kind of network topology. And with that,


53
00:05:01,240 --> 00:05:02,240
that's it.


54
00:05:02,240 --> 00:05:07,240
Thank you.
